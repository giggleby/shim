#!/bin/sh
# Copyright (c) 2014 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

INIT_BASE="/usr/local/factory/init"
FACTORY_BASE="/usr/local/factory"
GOOFY_ROLES=""

export INIT_BASE FACTORY_BASE GOOFY_ROLES

execute_rules() {
  local init_folder="$1"
  local rule_file=""

  for rule_file in "${INIT_BASE}/${init_folder}"/*.sh; do
    echo "Applying ${rule_file}..."
    "${rule_file}"
  done
}

main() {
  echo "Starting ChromeOS factory initialization..."
  local rule_file

  execute_rules common.d
  execute_rules iptables.d

  # Optional daemons.
  for tag_file in ${INIT_BASE}/tag_*; do
    local tag_script="${INIT_BASE}/tags.d/start_${tag_file#${INIT_BASE}/tag_}"
    if [ -x "${tag_script}" ]; then
      "${tag_script}"
    fi
  done

  # TODO(hungte) Stop here to support fixtures that don't run Goofy.

  # Determine Goofy roles (device or presenter).
  local tag_presenter="${INIT_BASE}/run_goofy_presenter"
  local tag_device="${INIT_BASE}/run_goofy_device"
  local role

  [ -f "${tag_device}" ] && GOOFY_ROLES="${GOOFY_ROLES} device"
  [ -f "${tag_presenter}" ] && GOOFY_ROLES="${GOOFY_ROLES} presenter"
  [ -z "${GOOFY_ROLES}" ] && GOOFY_ROLES="${GOOFY_ROLES} device monolithic"
  echo "Goofy roles: ${GOOFY_ROLES}"

  for role in ${GOOFY_ROLES}; do
    execute_rules goofy.d/${role}
  done
}

mkdir -p /var/log
main "$@" 2>&1 | tee /var/log/factory-init-startup.log
