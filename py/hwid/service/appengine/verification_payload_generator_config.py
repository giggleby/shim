# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
"""Classes defining configs for the verification payload generator."""

from typing import List, Mapping, NamedTuple, Optional


class VerificationPayloadGeneratorConfig(NamedTuple):
  """A class to describe configs for the verification payload generator.

  Attributes:
    ignore_error: The list of component categories which means the error
        messages generated by their generator will be ignored.
    waived_comp_categories: The list of component categories which means their
        verification payload will not be generated.
  """

  ignore_error: List[str]
  waived_comp_categories: List[str]

  @classmethod
  def Create(
      cls, ignore_error: Optional[List[str]] = None,
      waived_comp_categories: Optional[List[str]] = None
  ) -> 'VerificationPayloadGeneratorConfig':
    if ignore_error is None:
      ignore_error = []
    if waived_comp_categories is None:
      waived_comp_categories = []

    return cls(ignore_error=ignore_error,
               waived_comp_categories=waived_comp_categories)

  @classmethod
  def BatchCreate(
      cls, config: Mapping[str, dict]
  ) -> 'Mapping[str, VerificationPayloadGeneratorConfig]':
    """Create batch configs from a dictionary.

    Args:
      config: A dictionary where key is model name and value is config
    Returns:
      A dictionary where key is model name and value is a verification payload
        generator config instance.
    """
    return {k: cls.Create(**v)
            for k, v in config.items()}
