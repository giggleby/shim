syntax = "proto3";
package cros.factory.bundle_creator.proto;

message BundleMetadata {
  string board = 1;
  string project = 2;
  string phase = 3;
  string toolkit_version = 4;
  string test_image_version = 5;
  string release_image_version = 6;
  string firmware_source = 7;
}

message BundleInfo {
  BundleMetadata metadata = 1;
  string creator = 2;
  string status = 3;
  string blob_path = 4;
  string filename = 5;
  double request_time_sec = 6;
  double request_start_time_sec = 7;
  double request_end_time_sec = 8;
  double bundle_created_timestamp_sec = 9;
  string error_message = 10;
  string doc_id = 11;
}

message HwidOption {
  bool update_db_firmware_info = 1;
  int64 related_bug_number = 2;
}

message CreateBundleRequest {
  string email = 1;
  BundleMetadata bundle_metadata = 2;
  HwidOption hwid_option = 3;
  repeated string cc_emails = 4;
}

message CreateBundleResponse {
  enum Status {
    UNKNOWN = 0;
    NO_ERROR = 1;
  }
  Status status = 1;
}

message CreateBundleMessage {
  string doc_id = 1;
  CreateBundleRequest request = 2;
}

message GetBundleInfoRequest {
  reserved 1;

  string project = 2;
}

message GetBundleInfoResponse {
  repeated BundleInfo bundle_infos = 1;
}

message DownloadBundleRequest {
  string email = 1;
  string blob_path = 2;
}

message DownloadBundleResponse {
  string download_link = 1;
}

message GetBundleErrorMessageRequest {
  string project = 1;
  string doc_id = 2;
}

message GetBundleErrorMessageResponse {
  string content = 1;
}

message ExtractFirmwareInfoRequest {
  string project = 1;
  string phase = 2;
  string image_gs_path = 3;
  string email = 4;
  int64 bug_number = 5;
}

message ExtractFirmwareInfoResponse {
  enum Status {
    UNKNOWN = 0;
    NO_ERROR = 1;
  }
  Status status = 1;
}

message GetFirmwareInfoPreviewRequest {
  string project = 1;
  string board = 2;
  int64 milestone = 3;
  string version = 4;
}

message GetFirmwareInfoPreviewResponse {
  repeated string main_ro_image = 1;
  repeated string ec_ro_image = 2;
  repeated string fp_ro_image = 3;
}


service FactoryBundleV2Service {
  rpc CreateBundle(CreateBundleRequest)
      returns (CreateBundleResponse) {
  }
  rpc GetBundleInfo(GetBundleInfoRequest)
      returns (GetBundleInfoResponse) {
  }
  rpc DownloadBundle(DownloadBundleRequest)
      returns (DownloadBundleResponse) {
  }
  rpc GetBundleErrorMessage(GetBundleErrorMessageRequest)
      returns (GetBundleErrorMessageResponse) {
  }
  rpc ExtractFirmwareInfo(ExtractFirmwareInfoRequest)
      returns (ExtractFirmwareInfoResponse) {
  }
  rpc GetFirmwareInfoPreview(GetFirmwareInfoPreviewRequest)
      returns (GetFirmwareInfoPreviewResponse) {
  }
}
